apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "weather.fullname" . }}
  labels:
    {{- include "weather.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "weather.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "weather.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "weather.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.main.image.repository }}:{{ .Values.main.image.tag }}"
          imagePullPolicy: {{ .Values.main.image.pullPolicy }}
          env:
          - name: GEOJS_SERVICE_HOST
            value: {{ .Values.main.env.geojs_service_host | quote }}
          - name: OPENWEATHERMAP_SERVICE_HOST
            value: {{ .Values.main.env.openweathermap_service_host | quote }}
          - name: PORT
            value: {{ .Values.main.containerPort }}
          ports:
            - name: http
              containerPort: {{ .Values.main.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-geojs
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.geojs.image.repository }}:{{ .Values.geojs.image.tag }}"
          imagePullPolicy: {{ .Values.geojs.image.pullPolicy }}
          env:
          - name: PORT
            value: {{ .Values.geojs.containerPort }}
          ports:
            - name: http
              containerPort: {{ .Values.geojs.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-openweathermap
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.openweathermap.image.repository }}:{{ .Values.openweathermap.image.tag }}"
          imagePullPolicy: {{ .Values.openweathermap.image.pullPolicy }}
          env:
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: openweathermap
          - name: PORT
            value: {{ .Values.openweathermap.containerPort }}
          ports:
            - name: http
              containerPort: {{ .Values.openweathermap.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
